program: plus

def: acey deucey
  from: CENTER HALF
    call: _quasi concentric(trade, _acey circulate)
  // allow trailers to circulate only if they are ends of waves
  // (from 2x4 where the ends are facing N/S, or from diamonds)
  // XXX: this could be more general!
  from: TWIN GENERAL DIAMONDS
    call: _quasi concentric(trade, _box circulate)
  from: 2x4
    condition: match(_facing pattern(), "[<v^]..[v^>][<v^]..[v^>]")
    call: _quasi concentric(trade, _box circulate)

def: _acey circulate
  from: 2x2
    condition: ALL(LEADER), "Circulate is not allowed to cross the center"
    call: _box circulate

// XXX: ALL 8 SPIN THE TOP
// XXX: reformulate as application of "all 8" concept
// XXX: alternatively, it's a "4/4 top" (A1)

// (anything) & roll
def: roll
  spoken: [-10] roll
  from: ANY // make sure we've breathed before we roll
    call: _roll
def: and roll(c)
  spoken: [-10] <c=anything> and roll
  call: _roll([c])

// (anything) & spread
// XXX: missing case 1: "heads star thru & spread", heads spread,
//                      *even if they are trailers*
def: spread
  call: _spread

def: and spread(c)
  spoken: [-10] <c=anything> and spread
  from: ANY
    // this applies only if the call ends in parallel lines (and isn't
    // being evaluated for parts)
    ipart: _add num(1, num parts([c]))
      call: _blend(_start case 2 spread([c]), _spread)
  from: ANY
    // unblended version
    part: num parts([c])
      call: [c]
    part: // "spread adds 1 part to the call"
      call: _spread

def: _start case 2 spread(c)
  ends in: formation(PARALLEL GENERAL LINES)
  call: [c]

def: _spread
  in: 2
  // "case 2" of the definition
  from: GENERAL LINE
    from: GENERAL PARTNERS
      from: MINIWAVE
        call: _miniwave spread
      from: COUPLE
        call: half sashay
  // note that 'spread' from COMPLETED DOUBLE PASS THRU has been redefined
  // (and taken off the plus list) *according to Vic Ceder*
  // callerlab doesn't seem to have gotten the memo yet, though (2012-11)
  from: COMPLETED DOUBLE PASS THRU
    call: _designated spread(LEADER)
  from: GENERAL COLUMNS
    call: slim down

def: chase left
  spoken: chase left | left chase
  call: mirror(chase right)
def: chase right
  in: 6
  ipart:
    from: BACK TO BACK COUPLES
      call: _start chase right, _box circulate, _box circulate
def: _start chase right
  in: 4 // so it's the same length as the box circulates
  from: COUPLE
    select: BELLE
      prim: 0, 0, right
      prim: 0, 0, right
    select: BEAU
      prim: 0, 0, none
      prim: 0, 0, none

def: coordinate
  // 4 parts
  call: circulate
  call: 1/2(circulate)
  call: triple trade
  call: _like a coordinate

def: dixie grand
  // 3 parts
  call: _maybe circle adjust(_start dixie grand)
  call: _maybe circle adjust(mirror(_dixie pull by))
  call: _maybe circle adjust(_dixie pull by)
def: _start dixie grand
  // "those who can right pull by"
  from: RH QUARTER TAG, RH THREE QUARTER TAG
    call: _quasi concentric(right pull by, nothing)
  from: COMPLETED DOUBLE PASS THRU
    call: _quasi concentric(nothing, and(face in, right pull by, face in))
  from: allow unmatched(FACING DANCERS)
    call: right pull by
  from: allow unmatched(FACING DANCERS, RH MINIWAVE)
    call: right pull by
// this is a "pull by and adjust to o spots"
def: _dixie pull by
  in: 2
  from: TRADE BY
    select: and(CENTER, BEAU)
      prim: -2, 1, none, sashay-start
      prim:  0, 1, none
    select: and(CENTER, BELLE)
      prim:  0, 1, none
      prim:  2, 1, none, sashay-finish
    select: and(END, BEAU)
      prim:  1, 0, right
      prim:  0, 1, none
    select: and(END, BELLE)
      prim: -1, -2, left
      prim:  2, 1, none, sashay-finish
  from: FACING DANCERS
    call: right pull by

def: three quarter tag
  optional: LEFT
  call: _tag the line(3/4)

def: fan the top // "own the ends, counter rotate by centers cast off 3/4"
  optional: LEFT
  in: 4
  call: _maybe touch(_fan the top)

def: _fan the top
  in: 4
  from: OCEAN WAVE, TWO-FACED LINE
    // this definition lets us do "1/2 a fan the top", and also animates
    // nicely, since it provides an intermediate animation point for the
    // ends which lets us breathe properly in the middle (instead of all
    // at the end)
    select: CENTER
      //call: cast off 3/4 // it's "concentric" cast off 3/4, use a prim for now
      part:
       prim: in 1,1,in
      part:
       prim: 0,1,in 1/8
       prim: in 1/2, 1/2, in 1/8
      part:
       prim: in 1,1,in
    select: END
      //call: counter rotate 1/4   // we'll use a primitive for simplicity
      prim: 0, 3, in 1/8
      prim: in 1 1/2, 1 1/2, in 1/8
  from: DIAMOND // XXX actually from 'SPLIT 4' which is 4 dancers on each side
    ipart:
      call: _quasi concentric(_in(4, cast(3/4)), _in(4, cast(1/4)))

// see the definition for 'scoot back'
def: follow your neighbor
  optional: LEFT
  in: 6
  from: BOX, 2x2
    condition: or(PROGRAM AT LEAST(c1), NOT(TBONED(ALL))), \
               "T-boned formations not allowed below C1"
    condition: MATCH(_SELECTION PATTERN(TRAILER), "x__x|_xx_"), \
               "Must have diagonal trailers"
    select: TRAILER
      ipart:
        prim: 0,1,none  // extend
        prim: in 1,1,in // arm turn 1/4
        prim: in 1,1,in // arm turn 1/4
        prim: in 1,1,in // arm turn 1/4
    select: and(LEADER,BEAU)
      ipart:
        prim: in 1,2,right
        prim: 0, 0, none // make the timing work out
        prim: 0, 0, right
        prim: 0, 0, right
    select: and(LEADER,BELLE)
      ipart:
        prim: in 1,2,left
        prim: 0, 0, none // make the timing work out
        prim: 0, 0, left
        prim: 0, 0, left
  // vic ceder doesn't like this usage.
  from: SINGLE QUARTER TAG, QUARTER TAG
    call: _extend, cast off(3/4)

def: grand swing thru
  optional: LEFT
  in: 6 // assume same timing as swing thru
  call: _maybe touch(_grand quarter thru(1/2), 2)
def: grand left swing thru
  call: mirror(grand swing thru)

// callerlab says "10-12" beats and 4 parts
def: linear cycle
  from: GENERAL LINE
    part:
      call: hinge
    // this is a cheat! we can't really do the phantom 2x4 called for in
    // the proper 3-part definition yet.
    ipart: 3
      call: _box circulate, _finish linear cycle
def: _finish linear cycle
  in: 4
  from: BOX
    select: LEADER
      prim: in 2, 0, in
      prim: 0, 0, in
    select: TRAILER
      prim: 0, 2, in, sashay-finish
      prim: 0, 0, in


def: peel the top
  in: 6
  call: _peel and step, fan the top
def: _peel and step
  in: 2
  ipart:
    from: BOX, 2x2 /* XXX: 2x2 doesn't define LEADERS/TRAILERS =( */
      condition: or(PROGRAM AT LEAST(c1), NOT(TBONED(ALL))), \
                 "T-boned formations not allowed below C1"
      condition: MATCH(_SELECTION PATTERN(TRAILER), "x__x|_xx_"), \
                 "Trailers must step to a hand hold"
      select: LEADER
        prim: out 1, 1, out 1/4
        prim: in 2,  1, in 1/4
      select: TRAILER
        prim: 0, 1, none
    from: SINGLE QUARTER ZEE
      select: LEADER
        prim: out 1, 1, out 1/4
        prim: in 1,  1, in 1/4
      select: TRAILER
        prim: 0, 1, none
        prim: 0, 1, none

def: spin chain and exchange the gears(n=3/4)
  spoken: spin chain and exchange the gears (but turn the stars <n=fraction>)?
  in: 26
  part:
    call: _maybe touch(_wave swing)
  xpart:
    call: _spin chain and exchange the gears part 2
    call: _fractional(_multiply num(4,[n]), diamond circulate)
    call: _fractional(3/4, exchange the diamond)
    call: interlocked flip the diamond
def: _spin chain and exchange the gears part 2
  in: 8 // official timing for "three quarter thru"
  from: PARALLEL WAVES
    call: _quasi concentric(any hand three quarter thru, u turn back)

def: trade the wave
  in: 6
  from: OCEAN WAVE
    call: cross run(ALL)

// track(n) is c3b, but track(2) is plus.
def: track(n)
  spoken: track <n=number>
  condition: not(or(greater(0,[n]),greater([n],4))), \
             "Can't track less than 0 or greater than 4"
  condition: or(PROGRAM AT LEAST(c3b),equal num([n],2)), \
             "Only track 2 is allowed below C3B"
  from: COMPLETED DOUBLE PASS THRU
    call: _tag(_in(6, tandem(partner trade)), _multiply num([n], 1/4))
  example: track(0)
    before:
    ! <a<b D>C>
    ! <A<B d>c>
    after:
    ! B> A><c <d
    ! b> a><C <D
  example: track(1)
    before:
    ! <a<b D>C>
    ! <A<B d>c>
    after:
    !    A>
    ! B><c <d
    ! b> a><D
    !   <C
  example: track(2)
    before:
    ! <a<b D>C>
    ! <A<B d>c>
    after:
    ! B> A>
    !<c <d
    ! b> a>
    !<C <D
  example: track(3)
    before:
    ! <a<b D>C>
    ! <A<B d>c>
    after:
    !     B>
    ! <c <d  A>
    ! <C  b> a>
    !    <D
  example: track(4)
    before:
    ! <a<b D>C>
    ! <A<B d>c>
    after:
    ! <c <d  B> A>
    ! <C <D  b> a>
