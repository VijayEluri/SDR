program: plus

def: roll
  call: _roll
def: _and_roll(c)
  spoken: [-10] <c=anything> and roll
  call: _roll([c])

def: three quarter tag
  optional: LEFT
  call: _tag the line(3/4)

def: fan the top // "own the ends, counter rotate by centers cast off 3/4"
  optional: LEFT
  in: 4
  from: OCEAN WAVE, TWO-FACED LINE
    // this definition lets us do "1/2 a fan the top", and also animates
    // nicely, since it provides an intermediate animation point for the
    // ends which lets us breathe properly in the middle (instead of all
    // at the end)
    select: CENTER
      //call: cast off 3/4 // it's "concentric" cast off 3/4, use a prim for now
      part:
       prim: in 1,1,in
      part:
       prim: 0,1,in 1/8
       prim: in 1/2, 1/2, in 1/8
      part:
       prim: in 1,1,in
    select: END
      //call: counter rotate 1/4   // we'll use a primitive for simplicity
      prim: 0, 3, in 1/8
      prim: in 1 1/2, 1 1/2, in 1/8

def: trade the wave
  in: 6
  from: OCEAN WAVE
    call: cross run(ALL)

// track(n) is c3b, but track(2) is plus.
def: track(n)
  spoken: track <n=number>
  condition: not(or(less([n],0),greater([n],4))), \
             "Can't track less than 0 or greater than 4"
  condition: or(PROGRAM AT LEAST(c3b),equal([n],2)), \
             "Only track 2 is allowed below C3B"
  from: COMPLETED DOUBLE PASS THRU
    call: _tag(tandem(partner trade), [n])
  example: track(0)
    before:
    ! <a<b D>C>
    ! <A<B d>c>
    after:
    ! B> A><c <d
    ! b> a><C <D
  example: track(1)
    before:
    ! <a<b D>C>
    ! <A<B d>c>
    after:
    !    A>
    ! B><c <d
    ! b> a><D
    !   <C
  example: track(2)
    before:
    ! <a<b D>C>
    ! <A<B d>c>
    after:
    ! B> A>
    !<c <d
    ! b> a>
    !<C <D
  example: track(3)
    before:
    ! <a<b D>C>
    ! <A<B d>c>
    after:
    !     B>
    ! <c <d  A>
    ! <C  b> a>
    !    <D
  example: track(4)
    before:
    ! <a<b D>C>
    ! <A<B d>c>
    after:
    ! <c <d  B> A>
    ! <C <D  b> a>
